mod.twoway.continuous = function(x, m, y, data, xhi = mean(x, na.rm=T)+sd(x, na.rm=T), xmod = mean(x, na.rm=T), xlo = mean(x, na.rm=T)-sd(x, na.rm=T), mhi = mean(m, na.rm=T)+sd(m, na.rm=T), mmod = mean(m, na.rm=T), mlo  = mean(m, na.rm=T)-sd(m, na.rm=T), center=T, scale=T){
	
	#BASIC STARTING FUNCTION FOR MODERATION AMONG TWO CONTINUOUS VARIABLES
	#No covariates (yet).
	#NOTE: requires bsig and bcov.
	
	d = data[, c(x, m, y)]
	d=na.omit(d)
	
	cnd=colnames(d)[-ncol(d)]
	
	x = d[,x]
	if(length(unique(x))!=2){
		if(center | scale)x = scale(x, center=center, scale=scale)
		}

	m = d[,m]
	if(length(unique(m))!=2){
		if(center | scale)m = scale(m, center=center, scale=scale)
		}	
	
	y = d[,y]
	xm = x*m
	xvars = cbind(x, m, xm)
	colnames(xvars) = c(cnd, paste(cnd, collapse="X"))
	fit = bsig(xvars, y)
	
	coef = fit$coefficients[,1]
	names(coef) = c("Intercept", colnames(xvars))
	coef1=coef[-1]
	
	cov.b = bcov(xvars, y)[-1,-1] #No Intercept
	
	bvec=coef1[c(1,3)]
	
	if(length(unique(m))!=2){
	mmat=cbind(1, c(mhi, mmod, mlo))
	estimates=mmat%*%matrix(bvec)
	rownames(estimates) = c("hi", "mod", "low")

	whi = rbind(1, 0, mhi)
	wmod = rbind(1, 0, mmod)
	wlo = rbind(1, 0, mlo)

	sqsehi = t(whi)%*%cov.b%*%whi
	sqsemod = t(wmod)%*%cov.b%*%wmod
	sqselo = t(wlo)%*%cov.b%*%wlo

	sehi=sqrt(sqsehi)
	semod=sqrt(sqsemod)
	selo=sqrt(sqselo)
	
	SEs=rbind(sehi, semod, selo)
	
	}else if(length(unique(m))==2){
	
	mlevs=sort(unique(m), decreasing=T)
	mhi=mlevs[1]
	mlo=mlevs[2]
	
	mmat=cbind(1, c(mhi, mlo))
	estimates=mmat%*%matrix(bvec)
	rownames(estimates) = c("hi", "low")

	whi = rbind(1, 0, mhi)
	wlo = rbind(1, 0, mlo)

	sqsehi = t(whi)%*%cov.b%*%whi
	sqselo = t(wlo)%*%cov.b%*%wlo

	sehi=sqrt(sqsehi)
	selo=sqrt(sqselo)
	
	SEs=rbind(sehi, selo)
	}
	

	
	tvals=estimates/SEs
	
	n=nrow(d)
	k=ncol(xvars)
	df=n-k-1
	pvals=apply(tvals, 2, function(x) x=2*pt(abs(x), df, lower.tail=F))
	sig=ifelse(pvals < .001, "***", ifelse(pvals<.01, "**", ifelse(pvals <.05, "*", ""))) 
	
	SimpleSlopes = data.frame(round(estimates, 4), round(SEs, 4), round(tvals, 4), round(rep(df, nrow(estimates)), 4), round(pvals, 4), sig)
	colnames(SimpleSlopes) = c("Estimate", "Std.Error", "t", "df", "p", "")
	output=fit
	output$SimpleSlopes=SimpleSlopes
	output$Legend = "Simple slope of X on Y at High, Moderate, and Low values of M."
	return(output)
}
